<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Why You Shouldn&#8217;t Style React Components With JavaScript	</title>
	<atom:link href="/why-you-shouldnt-style-with-javascript/feed/" rel="self" type="application/rss+xml" />
	<link>/why-you-shouldnt-style-with-javascript/</link>
	<description></description>
	<lastBuildDate>Fri, 14 Apr 2017 00:12:05 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.3</generator>
	<item>
		<title>
		By: uscareme		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-35391</link>

		<dc:creator><![CDATA[uscareme]]></dc:creator>
		<pubDate>Fri, 14 Apr 2017 00:12:05 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-35391</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-22501&quot;&gt;Kirill Korolyov&lt;/a&gt;.

But it&#039;s very common for developers to mistakenly use cascading to mean inheritance, so the author is ensuring that readers are using the same definition he intends. As is appropriate to do on any foreseeable point of confusion. Hope you enjoyed that dopamine surge, though.]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-22501">Kirill Korolyov</a>.</p>
<p>But it&#8217;s very common for developers to mistakenly use cascading to mean inheritance, so the author is ensuring that readers are using the same definition he intends. As is appropriate to do on any foreseeable point of confusion. Hope you enjoyed that dopamine surge, though.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Kirill Korolyov		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-22501</link>

		<dc:creator><![CDATA[Kirill Korolyov]]></dc:creator>
		<pubDate>Fri, 05 Aug 2016 08:49:49 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-22501</guid>

					<description><![CDATA[There is precisely one meaning of cascading. What you have described as the first one is actually known as inheritance.
https://developer.mozilla.org/en/docs/Web/Guide/CSS/Getting_started/Cascading_and_inheritance]]></description>
			<content:encoded><![CDATA[<p>There is precisely one meaning of cascading. What you have described as the first one is actually known as inheritance.<br />
<a href="https://developer.mozilla.org/en/docs/Web/Guide/CSS/Getting_started/Cascading_and_inheritance" rel="nofollow ugc">https://developer.mozilla.org/en/docs/Web/Guide/CSS/Getting_started/Cascading_and_inheritance</a></p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Tom		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-22357</link>

		<dc:creator><![CDATA[Tom]]></dc:creator>
		<pubDate>Thu, 28 Jul 2016 06:00:35 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-22357</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-3527&quot;&gt;Phil Ricketts&lt;/a&gt;.

hi guys. i have a problem.can you help me ? how can i let many Namespace CSS modules into one `style` DOM element tag in the `head`?]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-3527">Phil Ricketts</a>.</p>
<p>hi guys. i have a problem.can you help me ? how can i let many Namespace CSS modules into one `style` DOM element tag in the `head`?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: John Willcocks		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-22324</link>

		<dc:creator><![CDATA[John Willcocks]]></dc:creator>
		<pubDate>Tue, 26 Jul 2016 15:09:27 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-22324</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-21392&quot;&gt;Steve Tomlin&lt;/a&gt;.

I am wondering how exactly libraries like Material-UI (http://www.material-ui.com)/ exist which run directly contrary to what you are saying and have a thriving ecosystem? Your open mind must make you a treat to work with :P]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-21392">Steve Tomlin</a>.</p>
<p>I am wondering how exactly libraries like Material-UI (<a href="http://www.material-ui.com/" rel="nofollow ugc">http://www.material-ui.com/</a>) exist which run directly contrary to what you are saying and have a thriving ecosystem? Your open mind must make you a treat to work with ðŸ˜›</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: John Willcocks		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-22323</link>

		<dc:creator><![CDATA[John Willcocks]]></dc:creator>
		<pubDate>Tue, 26 Jul 2016 15:06:10 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-22323</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-21376&quot;&gt;Glantucan&lt;/a&gt;.

You know, that&#039;s kind of horseshit. This is why there are developers worth their salt who can do simple things like Object.assign({}, style, this.props.style}) when they&#039;ve created their components if they&#039;d like them to be re-useable and fully-styleable :P]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-21376">Glantucan</a>.</p>
<p>You know, that&#8217;s kind of horseshit. This is why there are developers worth their salt who can do simple things like Object.assign({}, style, this.props.style}) when they&#8217;ve created their components if they&#8217;d like them to be re-useable and fully-styleable ðŸ˜›</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: John Willcocks		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-22322</link>

		<dc:creator><![CDATA[John Willcocks]]></dc:creator>
		<pubDate>Tue, 26 Jul 2016 15:01:35 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-22322</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-21392&quot;&gt;Steve Tomlin&lt;/a&gt;.

Close minds and dogmas are for immature developers who are annoying to work with, period.]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-21392">Steve Tomlin</a>.</p>
<p>Close minds and dogmas are for immature developers who are annoying to work with, period.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Steve Tomlin		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-21392</link>

		<dc:creator><![CDATA[Steve Tomlin]]></dc:creator>
		<pubDate>Thu, 23 Jun 2016 08:17:36 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-21392</guid>

					<description><![CDATA[I can&#039;t even believe this is a thing. It&#039;s like the brexit debate. Since when did even the idea of inline styling get considered as an option? I suspect it was someone who hasn&#039;t had to deal with performance, or had to share their code, and has only ever worked on silo&#039;d componentsa, or ever had to work much with browser quirks or hacks, or ever had to outsource work to different skilled developers due to time pressures - ie non javascripters who are excellent at css, 

Inline styling is for immature developers. period.]]></description>
			<content:encoded><![CDATA[<p>I can&#8217;t even believe this is a thing. It&#8217;s like the brexit debate. Since when did even the idea of inline styling get considered as an option? I suspect it was someone who hasn&#8217;t had to deal with performance, or had to share their code, and has only ever worked on silo&#8217;d componentsa, or ever had to work much with browser quirks or hacks, or ever had to outsource work to different skilled developers due to time pressures &#8211; ie non javascripters who are excellent at css, </p>
<p>Inline styling is for immature developers. period.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Glantucan		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-21376</link>

		<dc:creator><![CDATA[Glantucan]]></dc:creator>
		<pubDate>Wed, 22 Jun 2016 07:46:31 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-21376</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-20782&quot;&gt;Moritz Sattler&lt;/a&gt;.

Because if your component gets integrated on another site (a third party one) your styles will overwrite theirs. 
That was the main reason inline-styles were a bad idea on the first place.
The only exception I understand is positioning, but if you&#039;ve worked with CSS you now that many things on the page styles (a different font, a different layout aproach) can break that. So you&#039;ll have to be very carefull if you want ot deliver you positioning rules inline.]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-20782">Moritz Sattler</a>.</p>
<p>Because if your component gets integrated on another site (a third party one) your styles will overwrite theirs.<br />
That was the main reason inline-styles were a bad idea on the first place.<br />
The only exception I understand is positioning, but if you&#8217;ve worked with CSS you now that many things on the page styles (a different font, a different layout aproach) can break that. So you&#8217;ll have to be very carefull if you want ot deliver you positioning rules inline.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Moritz Sattler		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-20782</link>

		<dc:creator><![CDATA[Moritz Sattler]]></dc:creator>
		<pubDate>Wed, 08 Jun 2016 16:00:06 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-20782</guid>

					<description><![CDATA[Your main point seems to be that inline style is bad, because you can reach the same results with css + a lot of tooling and convention. 
But why would I put up with all this extra complexity? What BIG benefit is CSS offering over inline that makes this worthwhile?]]></description>
			<content:encoded><![CDATA[<p>Your main point seems to be that inline style is bad, because you can reach the same results with css + a lot of tooling and convention.<br />
But why would I put up with all this extra complexity? What BIG benefit is CSS offering over inline that makes this worthwhile?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Nathaniel		</title>
		<link>/why-you-shouldnt-style-with-javascript/#comment-20320</link>

		<dc:creator><![CDATA[Nathaniel]]></dc:creator>
		<pubDate>Fri, 27 May 2016 16:46:47 +0000</pubDate>
		<guid isPermaLink="false">/?p=753#comment-20320</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/why-you-shouldnt-style-with-javascript/#comment-19603&quot;&gt;uscareme&lt;/a&gt;.

@USCAREME 
This is the only person here that makes sense. Everyone else sounds like noobs, JS developers who don&#039;t know CSS, or some combination.

Inline styles are horrible. Why would you want that? 

You can just as easily have locally scoped css when using external stylesheets, by using css name spaces. The guy who said using CSS namespaces is bad is wrong. How else are you supposed to prevent css collisions?

Everyone has an opinion. The react way of doing HTML and CSS is wrong and will not last the test of time. 

The angualr2 way is also wrong.

The best way is the traditional external css with properly defined classes and html structure. The goal is the make the markup as minimally dependent on css structure as possible, and to make the css structure as minimially dependent on the markup structure. In other words, the goal is to try to be flexible so changes are easier later.

But let&#039;s face it, writing CSS, SCSS, LESS, is not easy. It&#039;s not for javascript developers, C# devs, or any object oriented programmed.

CSS is for those people who can say &quot;I&#039;m a front-end developer&quot; and understand CSS at it&#039;s core.

It is possible to be a frontend and backend developer, but only if you truly understand all the languages you are using. Most JS devs are way out of their league with CSS.

I started with HTML, then CSS, then JS, and this has allowed me a great understanding of the CSS/HTML marriage. 

Please, JS devs, go learn CSS, and then a preprocessor of your choice.

Stop ruining the CSS workflow with your lazyiness and all this inline-bogus css. I have to work hard with angular2 just to get external css working, but luckily, it works, thanks to webpack and loaders.

CSS4 is due any month now, and will be MUCH better than every previous version.]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/why-you-shouldnt-style-with-javascript/#comment-19603">uscareme</a>.</p>
<p>@USCAREME<br />
This is the only person here that makes sense. Everyone else sounds like noobs, JS developers who don&#8217;t know CSS, or some combination.</p>
<p>Inline styles are horrible. Why would you want that? </p>
<p>You can just as easily have locally scoped css when using external stylesheets, by using css name spaces. The guy who said using CSS namespaces is bad is wrong. How else are you supposed to prevent css collisions?</p>
<p>Everyone has an opinion. The react way of doing HTML and CSS is wrong and will not last the test of time. </p>
<p>The angualr2 way is also wrong.</p>
<p>The best way is the traditional external css with properly defined classes and html structure. The goal is the make the markup as minimally dependent on css structure as possible, and to make the css structure as minimially dependent on the markup structure. In other words, the goal is to try to be flexible so changes are easier later.</p>
<p>But let&#8217;s face it, writing CSS, SCSS, LESS, is not easy. It&#8217;s not for javascript developers, C# devs, or any object oriented programmed.</p>
<p>CSS is for those people who can say &#8220;I&#8217;m a front-end developer&#8221; and understand CSS at it&#8217;s core.</p>
<p>It is possible to be a frontend and backend developer, but only if you truly understand all the languages you are using. Most JS devs are way out of their league with CSS.</p>
<p>I started with HTML, then CSS, then JS, and this has allowed me a great understanding of the CSS/HTML marriage. </p>
<p>Please, JS devs, go learn CSS, and then a preprocessor of your choice.</p>
<p>Stop ruining the CSS workflow with your lazyiness and all this inline-bogus css. I have to work hard with angular2 just to get external css working, but luckily, it works, thanks to webpack and loaders.</p>
<p>CSS4 is due any month now, and will be MUCH better than every previous version.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
