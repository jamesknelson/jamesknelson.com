<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Introducing react-pacomo: Automatic namespacing for className	</title>
	<atom:link href="/taming-css-globals-with-react-without-webpack-or-inline-style/feed/" rel="self" type="application/rss+xml" />
	<link>/taming-css-globals-with-react-without-webpack-or-inline-style/</link>
	<description></description>
	<lastBuildDate>Sat, 16 Jul 2016 10:51:57 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.3</generator>
	<item>
		<title>
		By: Daniel Rotter		</title>
		<link>/taming-css-globals-with-react-without-webpack-or-inline-style/#comment-21997</link>

		<dc:creator><![CDATA[Daniel Rotter]]></dc:creator>
		<pubDate>Sat, 16 Jul 2016 10:51:57 +0000</pubDate>
		<guid isPermaLink="false">/?p=762#comment-21997</guid>

					<description><![CDATA[Is there anyway to use the pacomoDecorator for all the React components, without adding an annotation to all the classes? I can understand that it might be problematic if you want to switch progressively to this convention, but if you start a project from the very beginning this annotation seems like repeating to me.

Sorry if I am overseeing something cirtical, but I am just about to get started with React.]]></description>
			<content:encoded><![CDATA[<p>Is there anyway to use the pacomoDecorator for all the React components, without adding an annotation to all the classes? I can understand that it might be problematic if you want to switch progressively to this convention, but if you start a project from the very beginning this annotation seems like repeating to me.</p>
<p>Sorry if I am overseeing something cirtical, but I am just about to get started with React.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
